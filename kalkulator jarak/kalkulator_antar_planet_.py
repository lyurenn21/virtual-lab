# -*- coding: utf-8 -*-
"""kalkulator antar planet .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BkYQ_T-QECEKE9DXGAu_cvew7rVujqiY
"""

import streamlit as st
import numpy as np
import matplotlib.pyplot as plt

# --- Data Planet (Jarak rata-rata dari Matahari dalam AU) ---
planet_data = {
    "Merkurius": {"distance": 0.39, "color": "gray"},
    "Venus": {"distance": 0.72, "color": "orange"},
    "Bumi": {"distance": 1.00, "color": "blue"},
    "Mars": {"distance": 1.52, "color": "red"},
    "Jupiter": {"distance": 5.20, "color": "brown"},
    "Saturnus": {"distance": 9.58, "color": "goldenrod"},
    "Uranus": {"distance": 19.22, "color": "lightblue"},
    "Neptunus": {"distance": 30.05, "color": "darkblue"}
}

# --- Fungsi untuk Menghitung Jarak ---
def calculate_distance(planet1_distance, planet2_distance, angle_degrees):
    """
    Menghitung jarak antara dua planet menggunakan Hukum Kosinus.
    Asumsi: Sudut diberikan dalam derajat.
    """
    angle_radians = np.radians(angle_degrees)
    distance = np.sqrt(
        planet1_distance**2 + planet2_distance**2 -
        2 * planet1_distance * planet2_distance * np.cos(angle_radians)
    )
    return distance

# --- Fungsi untuk Membuat Visualisasi Sederhana ---
def create_solar_system_viz(planet1_info, planet2_info, angle_degrees):
    fig, ax = plt.subplots(figsize=(6, 6))

    # Matahari di tengah
    ax.plot(0, 0, 'o', markersize=15, color='yellow', label='Matahari')
    ax.text(0.1, 0.1, 'Matahari', fontsize=9)

    # Posisi Planet 1 (kita anggap di sumbu x positif untuk kesederhanaan)
    x1, y1 = planet1_info["distance"], 0
    ax.plot(x1, y1, 'o', markersize=10, color=planet1_info["color"], label=planet1_info["name"])
    ax.text(x1 + 0.5, y1, planet1_info["name"], fontsize=9)
    ax.annotate('', xy=(0, 0), xytext=(x1, y1),
                arrowprops=dict(arrowstyle='-', color='gray', linestyle=':', lw=0.5))

    # Posisi Planet 2 (dihitung berdasarkan sudut)
    angle_radians = np.radians(angle_degrees)
    x2 = planet2_info["distance"] * np.cos(angle_radians)
    y2 = planet2_info["distance"] * np.sin(angle_radians)
    ax.plot(x2, y2, 'o', markersize=10, color=planet2_info["color"], label=planet2_info["name"])
    ax.text(x2 + 0.5, y2, planet2_info["name"], fontsize=9)
    ax.annotate('', xy=(0, 0), xytext=(x2, y2),
                arrowprops=dict(arrowstyle='-', color='gray', linestyle=':', lw=0.5))

    # Garis Jarak Antar Planet
    ax.plot([x1, x2], [y1, y2], 'g--', linewidth=2, label='Jarak Antar Planet')

    # Pengaturan plot
    max_dist = max(planet1_info["distance"], planet2_info["distance"]) * 1.5
    ax.set_xlim(-max_dist, max_dist)
    ax.set_ylim(-max_dist, max_dist)
    ax.set_aspect('equal', adjustable='box')
    ax.set_xlabel("Jarak (AU)")
    ax.set_ylabel("Jarak (AU)")
    ax.set_title("Simulasi Posisi Relatif Planet")
    ax.grid(True, linestyle=':', alpha=0.6)

    return fig

# --- Tampilan Aplikasi Streamlit ---
def main():
    st.set_page_config(layout="wide") # Mengatur layout agar lebih lebar

    st.title("üöÄ Kalkulator Jarak Antar Planet Interaktif! üå†")
    st.write("Jelajahi seberapa jauh planet-planet di Tata Surya kita!")

    # --- Pilihan Planet ---
    col1, col2 = st.columns(2)
    with col1:
        planet1_name = st.selectbox(
            "Pilih Planet Pertama:",
            list(planet_data.keys()),
            index=2, # Default Bumi
            key="planet1_select"
        )
    with col2:
        planet2_name = st.selectbox(
            "Pilih Planet Kedua:",
            list(planet_data.keys()),
            index=3, # Default Mars
            key="planet2_select"
        )

    # --- Input Sudut (Simulasi Posisi Relatif) ---
    st.write("---") # Garis pemisah
    st.markdown("### Atur Posisi Relatif Planet üìê")
    st.info("Geser slider untuk mengubah sudut antara kedua planet relatif terhadap Matahari. "
            "Ini mensimulasikan posisi mereka di orbit.")

    angle = st.slider(
        "Sudut Relatif Terhadap Matahari (derajat):",
        0, 180, 90,
        key="angle_slider"
    )

    # Dapatkan data planet yang dipilih
    planet1_info = {"name": planet1_name, **planet_data[planet1_name]}
    planet2_info = {"name": planet2_name, **planet_data[planet2_name]}

    # --- Visualisasi & Hasil (diperbarui secara instan) ---
    st.write("---")
    st.markdown("### Lihat Hasilnya! ‚ú®")

    if planet1_name == planet2_name:
        st.warning("‚ö†Ô∏è Ups! Anda memilih planet yang sama. Silakan pilih dua planet yang berbeda untuk menghitung jarak.")
    else:
        # Hitung jarak
        dist1 = planet1_info["distance"]
        dist2 = planet2_info["distance"]
        calculated_dist = calculate_distance(dist1, dist2, angle)

        st.success(f"Jarak antara **{planet1_name}** dan **{planet2_name}** adalah sekitar **{calculated_dist:.2f} AU**.")
        st.write("*(1 AU = sekitar 150 juta kilometer atau 93 juta mil)*")

        # Tampilkan Visualisasi
        st.markdown("---")
        st.markdown("### Skema Posisi Planet")
        st.pyplot(create_solar_system_viz(planet1_info, planet2_info, angle))

        st.caption("Catatan: Visualisasi ini adalah model yang sangat disederhanakan. Posisi planet yang sebenarnya jauh lebih kompleks dan dinamis!")

if __name__ == "__main__":
    main()