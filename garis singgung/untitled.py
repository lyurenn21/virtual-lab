# -*- coding: utf-8 -*-
"""Untitled

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fKL-3zO8rbK0kFKUAtwmOBWHS5lGxZqH
"""

import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.patches import Circle
import sympy
from sympy import symbols, Eq, solve
import base64

# --- Helper Functions ---
def get_image_as_base64(path):
    with open(path, "rb") as image_file:
        return base64.b64encode(image_file.read()).decode()

# --- Page Configuration ---
st.set_page_config(
    page_title="Kalkulator Garis Singgung Lingkaran",
    page_icon="‚≠ï",
    layout="wide",
    initial_sidebar_state="expanded"
)

# --- Custom CSS for animations and styling ---
st.markdown(
    """
    <style>
    @keyframes pulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.05); }
        100% { transform: scale(1); }
    }
    @keyframes slideIn {
        0% { transform: translateX(-100%); opacity: 0; }
        100% { transform: translateX(0); opacity: 1; }
    }
    @keyframes fadeIn {
        0% { opacity: 0; }
        100% { opacity: 1; }
    }

    .stApp {
        background-color: #f0f2f6;
    }
    .stApp > header {
        background-color: #4CAF50; /* Green header */
        padding: 1rem;
        border-radius: 10px;
        color: white;
        text-align: center;
        animation: fadeIn 1s ease-out;
    }
    h1 {
        color: #2e8b57; /* SeaGreen */
        text-align: center;
        animation: pulse 2s infinite;
    }
    h2 {
        color: #3cb371; /* MediumSeaGreen */
        animation: slideIn 1s ease-out;
    }
    h3 {
        color: #4CAF50; /* Green */
    }
    .stButton>button {
        background-color: #4CAF50;
        color: white;
        border-radius: 8px;
        padding: 10px 20px;
        font-size: 16px;
        transition: all 0.3s ease;
    }
    .stButton>button:hover {
        background-color: #45a049;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }
    .block-container {
        padding-top: 2rem;
        padding-bottom: 2rem;
    }
    .stTextInput>div>div>input {
        border-radius: 8px;
        border: 1px solid #ccc;
        padding: 8px;
    }
    .stNumberInput>div>div>input {
        border-radius: 8px;
        border: 1px solid #ccc;
        padding: 8px;
    }
    .stSelectbox>div>div {
        border-radius: 8px;
        border: 1px solid #ccc;
    }
    .centered-text {
        text-align: center;
    }
    .highlight-box {
        background-color: #e6ffe6; /* Light green background */
        border-left: 5px solid #4CAF50; /* Green border */
        padding: 15px;
        margin-bottom: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    .concept-card {
        background-color: #ffffff;
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        padding: 20px;
        margin-bottom: 20px;
        transition: transform 0.3s ease;
    }
    .concept-card:hover {
        transform: translateY(-5px);
    }
    </style>
    """,
    unsafe_allow_html=True
)

# --- Title ---
st.markdown("<h1 class='centered-text'>‚ú® Kalkulator Garis Singgung Lingkaran Interaktif ‚ú®</h1>", unsafe_allow_html=True)
st.write("---")

# --- Sidebar Navigation ---
st.sidebar.title("Menu Utama")
menu_selection = st.sidebar.radio(
    "Pilih bagian:",
    ("Kalkulator Garis Singgung", "Penjelasan Rumus (Kehidupan Sehari-hari)", "Lembar Kerja Praktikum Siswa")
)
st.sidebar.markdown("---")
st.sidebar.info("Dibuat dengan ‚ù§Ô∏è oleh Programmer Python Profesional")

# --- Main Content Area ---
if menu_selection == "Kalkulator Garis Singgung":
    st.markdown("<h2>üéØ Kalkulator Garis Singgung Lingkaran</h2>", unsafe_allow_html=True)
    st.write("Hitung dan visualisasikan persamaan garis singgung lingkaran.")

    st.markdown("<div class='highlight-box'>Pilih jenis lingkaran dan metode perhitungan:</div>", unsafe_allow_html=True)

    circle_type = st.radio(
        "Pilih Jenis Persamaan Lingkaran:",
        ("Pusat (0,0) dan Jari-jari r", "Pusat (a,b) dan Jari-jari r", "Bentuk Umum $x^2 + y^2 + Ax + By + C = 0$")
    )

    st.write("---")

    # --- Input for Circle Parameters ---
    r = None
    h = 0
    k = 0
    A_val = 0
    B_val = 0
    C_val = 0

    if circle_type == "Pusat (0,0) dan Jari-jari r":
        r = st.number_input("Masukkan Jari-jari (r)", min_value=0.1, value=5.0, step=0.1, format="%.1f")
        st.latex(f"Lingkaran: x^2 + y^2 = {r**2}")
    elif circle_type == "Pusat (a,b) dan Jari-jari r":
        h = st.number_input("Masukkan Koordinat X Pusat (a)", value=2.0, step=0.1, format="%.1f")
        k = st.number_input("Masukkan Koordinat Y Pusat (b)", value=3.0, step=0.1, format="%.1f")
        r = st.number_input("Masukkan Jari-jari (r)", min_value=0.1, value=4.0, step=0.1, format="%.1f")
        st.latex(f"Lingkaran: (x - {h})^2 + (y - {k})^2 = {r**2}")
    else: # Bentuk Umum
        st.info("Untuk bentuk umum $x^2 + y^2 + Ax + By + C = 0$, lingkaran harus valid (jari-jari real dan positif).")
        A_val = st.number_input("Masukkan Koefisien A", value=-4.0, step=0.1, format="%.1f")
        B_val = st.number_input("Masukkan Koefisien B", value=6.0, step=0.1, format="%.1f")
        C_val = st.number_input("Masukkan Koefisien C", value=-12.0, step=0.1, format="%.1f")

        h_calc = -A_val / 2
        k_calc = -B_val / 2
        r_squared_calc = h_calc**2 + k_calc**2 - C_val

        if r_squared_calc < 0:
            st.error("Persamaan ini tidak merepresentasikan lingkaran nyata. Jari-jari imajiner.")
            r = None
        else:
            h, k = h_calc, k_calc
            r = np.sqrt(r_squared_calc)
            st.success(f"Lingkaran ditemukan: Pusat ({h:.2f}, {k:.2f}), Jari-jari (r) = {r:.2f}")
            st.latex(f"Lingkaran: (x - {h:.2f})^2 + (y - {k:.2f})^2 = {r_squared_calc:.2f}")

    if r is None or r <= 0:
        st.warning("Mohon masukkan nilai jari-jari yang valid dan positif.")
    else:
        st.markdown("---")
        method = st.radio(
            "Pilih Metode Perhitungan Garis Singgung:",
            ("Garis Singgung di Titik pada Lingkaran", "Garis Singgung dari Titik di Luar Lingkaran", "Garis Singgung dengan Gradien (m) Tertentu")
        )

        fig, ax = plt.subplots(figsize=(8, 8))
        ax.set_aspect('equal', adjustable='box')
        circle = Circle((h, k), r, color='blue', fill=False, linewidth=2, linestyle='--')
        ax.add_patch(circle)
        ax.plot(h, k, 'ro', markersize=5, label=f'Pusat Lingkaran ({h}, {k})')

        x_vals = np.linspace(h - r - 2, h + r + 2, 400)
        y_vals_upper = k + np.sqrt(r**2 - (x_vals - h)**2)
        y_vals_lower = k - np.sqrt(r**2 - (x_vals - h)**2)
        ax.plot(x_vals, y_vals_upper, color='blue', alpha=0.1)
        ax.plot(x_vals, y_vals_lower, color='blue', alpha=0.1)

        ax.set_xlim(h - r - 3, h + r + 3)
        ax.set_ylim(k - r - 3, k + r + 3)
        ax.grid(True)
        ax.set_xlabel("X")
        ax.set_ylabel("Y")
        ax.set_title("Visualisasi Lingkaran dan Garis Singgung")

        tangent_lines = []
        tangent_points = []

        if method == "Garis Singgung di Titik pada Lingkaran":
            st.markdown("<h3>üìç Garis Singgung di Titik pada Lingkaran</h3>", unsafe_allow_html=True)
            st.info("Masukkan koordinat titik $(x_1, y_1)$ yang berada pada lingkaran.")
            x1 = st.number_input("Masukkan $x_1$", value=h + r, step=0.1, format="%.1f")
            y1 = st.number_input("Masukkan $y_1$", value=k, step=0.1, format="%.1f")

            # Check if point is on the circle
            if abs((x1 - h)**2 + (y1 - k)**2 - r**2) < 0.01:
                st.success(f"Titik ({x1}, {y1}) berada pada lingkaran.")
                tangent_points.append((x1, y1))
                ax.plot(x1, y1, 'go', markersize=7, label=f'Titik Singgung ({x1}, {y1})')

                # Formula for (x-h)^2 + (y-k)^2 = r^2
                # (x1-h)(x-h) + (y1-k)(y-k) = r^2
                eq_string = f"({x1 - h}) * (x - {h}) + ({y1 - k}) * (y - {k}) = {r**2}"
                st.latex(eq_string)

                # Solve for y to plot
                if abs(y1 - k) > 1e-6: # Avoid division by zero if y1 = k
                    m_tan = -(x1 - h) / (y1 - k)
                    c_tan = y1 - m_tan * x1
                    tangent_y = m_tan * x_vals + c_tan
                    tangent_lines.append(tangent_y)
                    ax.plot(x_vals, tangent_y, color='red', linestyle='-', label='Garis Singgung')
                    st.write(f"Persamaan Garis Singgung: $y = {m_tan:.2f}x + {c_tan:.2f}$")
                elif abs(x1 - h) > 1e-6: # Vertical line
                    st.write(f"Persamaan Garis Singgung: $x = {x1:.2f}$")
                    ax.axvline(x=x1, color='red', linestyle='-', label='Garis Singgung')
                else: # Center point, should not happen for a point on the circle unless r=0
                    st.warning("Titik tidak valid untuk perhitungan garis singgung.")

            else:
                st.error(f"Titik ({x1}, {y1}) TIDAK berada pada lingkaran. Mohon masukkan titik yang berada di lingkaran.")

        elif method == "Garis Singgung dari Titik di Luar Lingkaran":
            st.markdown("<h3>üåê Garis Singgung dari Titik di Luar Lingkaran</h3>", unsafe_allow_html=True)
            st.info("Masukkan koordinat titik $(x_1, y_1)$ yang berada di luar lingkaran.")
            x_p = st.number_input("Masukkan $x_P$", value=h + r + 2, step=0.1, format="%.1f")
            y_p = st.number_input("Masukkan $y_P$", value=k + r + 2, step=0.1, format="%.1f")

            dist_sq = (x_p - h)**2 + (y_p - k)**2
            if dist_sq < r**2:
                st.error("Titik ini berada DI DALAM lingkaran. Garis singgung tidak dapat ditarik dari titik di dalam lingkaran.")
            elif abs(dist_sq - r**2) < 0.01:
                st.warning("Titik ini berada TEPAT PADA lingkaran. Gunakan metode 'Garis Singgung di Titik pada Lingkaran'.")
            else:
                st.success(f"Titik ({x_p}, {y_p}) berada di luar lingkaran.")
                ax.plot(x_p, y_p, 'mo', markersize=7, label=f'Titik Luar ({x_p}, {y_p})')

                # Formula for polar line: (x_p-h)(x-h) + (y_p-k)(y-k) = r^2
                # The intersection of this polar line with the circle gives the tangent points
                # Let P(xp, yp) be the external point.
                # Let T(xt, yt) be the tangent point on the circle.
                # The tangent line is (xt-h)(x-h) + (yt-k)(y-k) = r^2
                # This line also passes through P(xp, yp), so (xt-h)(xp-h) + (yt-k)(yp-k) = r^2

                # We need to solve a system of equations:
                # 1. (xt-h)^2 + (yt-k)^2 = r^2 (T is on the circle)
                # 2. (xp-h)(xt-h) + (yp-k)(yt-k) = r^2 (Polar line equation)

                xt, yt = symbols('xt yt')
                eq1 = Eq((xt - h)**2 + (yt - k)**2, r**2)
                eq2 = Eq((x_p - h) * (xt - h) + (y_p - k) * (yt - k), r**2)

                solutions = solve((eq1, eq2), (xt, yt))

                if solutions:
                    st.write("Dua Garis Singgung Ditemukan:")
                    for i, sol in enumerate(solutions):
                        xt_sol, yt_sol = float(sol[0]), float(sol[1])
                        tangent_points.append((xt_sol, yt_sol))
                        ax.plot(xt_sol, yt_sol, 'go', markersize=7, label=f'Titik Singgung {i+1} ({xt_sol:.2f}, {yt_sol:.2f})')

                        # Calculate tangent line equation using tangent point
                        # (x_t - h)(x - h) + (y_t - k)(y - k) = r^2
                        eq_tangent_str = f"({xt_sol - h:.2f}) * (x - {h:.2f}) + ({yt_sol - k:.2f}) * (y - {k:.2f}) = {r**2:.2f}"
                        st.latex(f"Garis Singgung {i+1}: {eq_tangent_str}")

                        # Plotting the tangent line
                        if abs(yt_sol - k) > 1e-6:
                            m_tan = -(xt_sol - h) / (yt_sol - k)
                            c_tan = yt_sol - m_tan * xt_sol
                            tangent_y = m_tan * x_vals + c_tan
                            tangent_lines.append(tangent_y)
                            ax.plot(x_vals, tangent_y, color='red', linestyle='-', label=f'Garis Singgung {i+1}' if i==0 else "")
                        elif abs(xt_sol - h) > 1e-6: # Vertical line
                            st.write(f"Persamaan Garis Singgung {i+1}: $x = {xt_sol:.2f}$")
                            ax.axvline(x=xt_sol, color='red', linestyle='-', label=f'Garis Singgung {i+1}' if i==0 else "")
                else:
                    st.error("Tidak dapat menemukan garis singgung. Pastikan titik berada di luar lingkaran.")


        elif method == "Garis Singgung dengan Gradien (m) Tertentu":
            st.markdown("<h3>üìê Garis Singgung dengan Gradien (m) Tertentu</h3>", unsafe_allow_html=True)
            st.info("Masukkan nilai gradien (m) yang diinginkan.")
            m_val = st.number_input("Masukkan Gradien (m)", value=1.0, step=0.1, format="%.1f")

            # Formula for (x-h)^2 + (y-k)^2 = r^2
            # y - k = m(x - h) +/- r * sqrt(m^2 + 1)
            # y = m(x - h) + k +/- r * sqrt(m^2 + 1)

            term = r * np.sqrt(m_val**2 + 1)

            st.write("Dua Garis Singgung Ditemukan:")
            # First tangent line
            c1 = -m_val * h + k + term
            st.latex(f"Garis Singgung 1: y = {m_val:.2f}x + {c1:.2f}")
            tangent_y1 = m_val * x_vals + c1
            tangent_lines.append(tangent_y1)
            ax.plot(x_vals, tangent_y1, color='red', linestyle='-', label='Garis Singgung 1')

            # Second tangent line
            c2 = -m_val * h + k - term
            st.latex(f"Garis Singgung 2: y = {m_val:.2f}x + {c2:.2f}")
            tangent_y2 = m_val * x_vals + c2
            tangent_lines.append(tangent_y2)
            ax.plot(x_vals, tangent_y2, color='red', linestyle='--', label='Garis Singgung 2')

            # Calculate tangent points for plotting
            # For y = m(x-h) + k +/- term, we need to find the intersection points with the circle.
            # Substitute y into circle equation: (x-h)^2 + (m(x-h) +/- term)^2 = r^2
            # Let X = x-h. So X^2 + (mX +/- term)^2 = r^2
            # X^2 + m^2 X^2 +/- 2mX*term + term^2 = r^2
            # (1+m^2)X^2 +/- 2mX*term + (term^2 - r^2) = 0
            # Note: term^2 = r^2 (m^2+1), so term^2 - r^2 = r^2 m^2
            # (1+m^2)X^2 +/- 2mX*term + r^2 m^2 = 0
            # This is a quadratic in X.
            # It simplifies to (1+m^2)X^2 +/- 2mX * r*sqrt(m^2+1) + r^2 m^2 = 0

            # A simpler way is to use the formula for tangent points given m
            # x_t = h +/- r*m/sqrt(m^2+1)
            # y_t = k -/+ r/sqrt(m^2+1)  (sign depends on the tangent line)

            # For the first tangent line (with +term):
            x_tan1 = h - (r * m_val) / np.sqrt(m_val**2 + 1) if m_val != 0 else h
            y_tan1 = k + (r / np.sqrt(m_val**2 + 1)) if m_val != 0 else k + r
            if m_val == 0: # Horizontal line
                x_tan1 = h
                y_tan1 = k + r
            if m_val == 0 and c1 < k: # horizontal line, bottom
                y_tan1 = k - r

            tangent_points.append((x_tan1, y_tan1))
            ax.plot(x_tan1, y_tan1, 'go', markersize=7, label='Titik Singgung 1')

            # For the second tangent line (with -term):
            x_tan2 = h + (r * m_val) / np.sqrt(m_val**2 + 1) if m_val != 0 else h
            y_tan2 = k - (r / np.sqrt(m_val**2 + 1)) if m_val != 0 else k - r
            if m_val == 0: # Horizontal line
                x_tan2 = h
                y_tan2 = k - r
            if m_val == 0 and c2 > k: # horizontal line, top
                y_tan2 = k + r

            tangent_points.append((x_tan2, y_tan2))
            ax.plot(x_tan2, y_tan2, 'go', markersize=7, label='Titik Singgung 2')

        ax.legend()
        st.pyplot(fig)

elif menu_selection == "Penjelasan Rumus (Kehidupan Sehari-hari)":
    st.markdown("<h2>üí° Penjelasan Rumus dalam Kehidupan Sehari-hari</h2>", unsafe_allow_html=True)
    st.write("Mari kita lihat bagaimana konsep garis singgung lingkaran ini berlaku dalam berbagai aspek kehidupan kita!")

    st.markdown("""
    <div class="concept-card">
        <h3>1. Roda Sepeda dan Permukaan Jalan</h3>
        <p>Bayangkan <strong>roda sepeda</strong> yang sedang menggelinding di jalan. Pada setiap saat, hanya <strong>satu titik</strong> pada keliling roda yang bersentuhan dengan permukaan jalan. Garis yang mewakili permukaan jalan pada titik kontak tersebut adalah <strong>garis singgung</strong> terhadap roda. Ini adalah contoh paling sederhana dari garis singgung lingkaran!</p>
        <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Bicycle_Wheel_Contact.svg/330px-Bicycle_Wheel_Contact.svg.png" alt="Roda Sepeda" width="200">
        <p><i>(Ilustrasi roda sepeda menyentuh jalan)</i></p>
    </div>
    """, unsafe_allow_html=True)

    st.markdown("""
    <div class="concept-card">
        <h3>2. Lintasan Bola Biliar (Pool)</h3>
        <p>Saat Anda memukul bola biliar, lintasan bola seringkali menyentuh sisi meja biliar (yang berbentuk garis lurus) hanya pada satu titik. Ketika bola memantul, arah geraknya (vektor kecepatan) pada saat menyentuh sisi meja adalah <strong>garis singgung</strong> terhadap "lingkaran" imajiner yang bisa kita buat dari pusat bola ke titik kontak tersebut. Pemain biliar profesional secara intuitif menggunakan konsep ini!</p>
        <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/d/d4/Pool_Table.svg/300px-Pool_Table.svg.png" alt="Meja Biliar" width="200">
        <p><i>(Ilustrasi bola biliar menyentuh sisi meja)</i></p>
    </div>
    """, unsafe_allow_html=True)

    st.markdown("""
    <div class="concept-card">
        <h3>3. Pergerakan Planet dan Orbit Satelit</h3>
        <p>Meskipun orbit planet umumnya elips, dalam skala yang kecil atau jika kita mendekati lintasan sebagai lingkaran (seperti dalam model yang disederhanakan), arah kecepatan suatu planet pada titik tertentu dalam orbitnya adalah <strong>garis singgung</strong> terhadap orbit tersebut. Demikian pula dengan satelit yang mengelilingi Bumi!</p>
        <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Orbital_velocity.svg/300px-Orbital_velocity.svg.png" alt="Orbit Planet" width="200">
        <p><i>(Ilustrasi orbit dengan vektor kecepatan sebagai garis singgung)</i></p>
    </div>
    """, unsafe_allow_html=True)

    st.markdown("""
    <div class="concept-card">
        <h3>4. Desain Jalan dan Tikungan</h3>
        <p>Para insinyur sipil menggunakan konsep garis singgung saat merancang jalan, terutama pada tikungan. Untuk transisi yang mulus dari jalan lurus ke tikungan melingkar, mereka menggunakan kurva transisi. Pada titik di mana jalan lurus "menyentuh" atau "bertemu" dengan tikungan melingkar, jalan lurus tersebut adalah <strong>garis singgung</strong> terhadap tikungan. Ini penting untuk keamanan dan kenyamanan berkendara!</p>
    </div>
    """, unsafe_allow_html=True)

    st.markdown("---")
    st.write("Semoga penjelasan ini membuat konsep garis singgung menjadi lebih mudah dipahami dan relevan bagi Anda!")

elif menu_selection == "Lembar Kerja Praktikum Siswa":
    st.markdown("<h2>‚úçÔ∏è Lembar Kerja Praktikum Siswa</h2>", unsafe_allow_html=True)
    st.write("Uji pemahaman Anda tentang garis singgung lingkaran dengan menyelesaikan soal-soal berikut. Anda bisa menggunakan kalkulator di menu sebelumnya untuk memverifikasi jawaban Anda!")

    # Load content from a local text file
    try:
        with open("lembar_kerja.txt", "r", encoding="utf-8") as f:
            lembar_kerja_content = f.read()
        st.markdown(lembar_kerja_content)
    except FileNotFoundError:
        st.error("File 'lembar_kerja.txt' tidak ditemukan. Pastikan file tersebut berada di direktori yang sama.")
        st.write("Silakan buat file `lembar_kerja.txt` dengan isi berikut:")
        st.code("""
### Lembar Kerja Praktikum Garis Singgung Lingkaran

**Nama:** ............................
**Kelas:** ............................
**Tanggal:** ............................

---

#### Petunjuk Umum:
* Bacalah setiap soal dengan seksama.
* Gunakan pengetahuan Anda tentang garis singgung lingkaran untuk menyelesaikan soal.
* Anda dapat menggunakan kalkulator "Garis Singgung Lingkaran" untuk memeriksa jawaban Anda.
* Tuliskan langkah-langkah penyelesaian Anda dengan jelas.

---

#### Soal 1: Garis Singgung di Titik pada Lingkaran

**Diberikan:** Lingkaran dengan persamaan $x^2 + y^2 = 25$.
**Pertanyaan:** Tentukan persamaan garis singgung lingkaran tersebut di titik $(3, 4)$.

**Langkah-langkah Penyelesaian:**
1.  Identifikasi pusat lingkaran dan jari-jari.
2.  Gunakan rumus garis singgung di titik pada lingkaran.
3.  Substitusikan nilai yang diketahui.
4.  Selesaikan persamaan.

**Jawaban Anda:**
....................................................................................
....................................................................................
....................................................................................

---

#### Soal 2: Garis Singgung dengan Gradien Tertentu

**Diberikan:** Lingkaran dengan persamaan $(x - 1)^2 + (y + 2)^2 = 9$.
**Pertanyaan:** Tentukan persamaan garis singgung lingkaran tersebut yang bergradien $m = 2$.

**Langkah-langkah Penyelesaian:**
1.  Identifikasi pusat lingkaran $(a, b)$ dan jari-jari $r$.
2.  Gunakan rumus garis singgung dengan gradien tertentu.
3.  Substitusikan nilai yang diketahui.
4.  Selesaikan persamaan (akan ada dua solusi).

**Jawaban Anda:**
....................................................................................
....................................................................................
....................................................................................

---

#### Soal 3: Garis Singgung dari Titik di Luar Lingkaran

**Diberikan:** Lingkaran dengan persamaan $x^2 + y^2 = 16$.
**Pertanyaan:** Tentukan persamaan garis singgung lingkaran tersebut yang ditarik dari titik $(0, 5)$.

**Langkah-langkah Penyelesaian:**
1.  Identifikasi pusat lingkaran dan jari-jari.
2.  Periksa apakah titik berada di luar lingkaran.
3.  Gunakan konsep garis polar atau substitusi untuk menemukan titik singgung.
4.  Tentukan persamaan garis singgung dari titik singgung tersebut.

**Jawaban Anda:**
....................................................................................
....................................................................................
....................................................................................

---

#### Refleksi:
* Apa yang Anda pelajari dari praktikum ini?
* Bagaimana aplikasi kalkulator membantu Anda memahami konsep garis singgung?

""")

    st.download_button(
        label="Unduh Lembar Kerja (TXT)",
        data=lembar_kerja_content.encode('utf-8'),
        file_name="lembar_kerja_garis_singgung.txt",
        mime="text/plain"
    )